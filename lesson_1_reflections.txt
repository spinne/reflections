How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made it much easier to see the difference because I didn't have to look
    at everything but only at the parts the machine told me had changed somehow.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It'd be easier to find bugs and compare the two versions. It would tell me
    when I'd changed something.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual: Every change is meaningful. But data can be lost because of to few commits.
    Automatic: Not every saved version is useful or meaningful. Less likely to lose data because of the constant saves.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is all about code - which has evolved to be split up into seperate files that interconnect. Without one of the connected files nothing would work. While Google Docs text files are not usually directly related to other files so it does not make sense to keep them tied together.

How can you use the commands git log and git diff to view the history of files?

    git log shows when a commit was made and by the comment on it what was changed. git diff allows me to compare two commits to eachother.

How might using version control make you more confident to make changes that
could break something?

    I can always go easily back if something went wrong.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
